{"ast":null,"code":"import { createSlice, createAsyncThunk, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst userToken = localStorage.getItem('userToken') ? localStorage.getItem('userToken') : null;\nconst initialState = {\n  loading: false,\n  userInfo: null,\n  userToken,\n  error: null,\n  success: false\n};\nexport const registerUser = createAsyncThunk('user/register', async (_ref, _ref2) => {\n  let {\n    userName,\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.post('http://localhost:5003/login', {\n      userName,\n      email,\n      password\n    });\n  } catch (error) {}\n});\nexport const login = createAsyncThunk('login/loginUser', async (_ref3, _ref4) => {\n  let {\n    email,\n    password\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5003/login', {\n      email,\n      password\n    }, config);\n    localStorage.setItem('userToken', data.userToken);\n    return data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n}); // const loginSliceReducer = createSlice({\n//     name: \"login\",\n//     initialState,\n//     extraReducers: builder => {\n//         builder.addCase(login.pending, state => {\n//             state.loading = true\n//         })\n//         builder.addCase(login.fulfilled, (state, action) => {\n//             state.loading = false\n//             state.user = action.payload\n//         })\n//         builder.addCase(login.rejected, (state, action) => {\n//             state.loading = false\n//             state.user = []\n//             state.error = action.error.message\n//         })\n//     }\n// })\n\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","isRejectedWithValue","axios","userToken","localStorage","getItem","initialState","loading","userInfo","error","success","registerUser","userName","email","password","rejectWithValue","config","headers","post","login","data","setItem","response","message","userSlice","reducer"],"sources":["/Users/reginaldamedee/CodingProjects/calisthenics-prime/client/src/features/user/userAction.js"],"sourcesContent":["import { createSlice, createAsyncThunk, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\nconst userToken = localStorage.getItem('userToken') ? localStorage.getItem('userToken') : null\n\nconst initialState = {\n    loading: false,\n    userInfo: null,\n    userToken,\n    error: null,\n    success: false\n}\n\n\nexport const registerUser = createAsyncThunk('user/register', async ({ userName, email, password }, { rejectWithValue }) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        axios.post('http://localhost:5003/login', {\n            userName,\n            email,\n            password\n        })\n    } catch (error) {\n\n    }\n})\n\nexport const login = createAsyncThunk('login/loginUser', async ({ email, password }, { rejectWithValue }) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n        const { data } = await axios.post('http://localhost:5003/login', {\n            email,\n            password\n        }, config)\n\n        localStorage.setItem('userToken', data.userToken)\n        return data\n    } catch (error) {\n        if (error.response && error.response.data.message) {\n            return rejectWithValue(error.response.data.message)\n        } else {\n            return rejectWithValue(error.message)\n        }\n    }\n})\n\n// const loginSliceReducer = createSlice({\n//     name: \"login\",\n//     initialState,\n//     extraReducers: builder => {\n//         builder.addCase(login.pending, state => {\n//             state.loading = true\n//         })\n//         builder.addCase(login.fulfilled, (state, action) => {\n//             state.loading = false\n//             state.user = action.payload\n//         })\n//         builder.addCase(login.rejected, (state, action) => {\n//             state.loading = false\n//             state.user = []\n//             state.error = action.error.message\n//         })\n//     }\n// })\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,QAAmE,kBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCD,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApC,GAAwE,IAA1F;AAEA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KADQ;EAEjBC,QAAQ,EAAE,IAFO;EAGjBL,SAHiB;EAIjBM,KAAK,EAAE,IAJU;EAKjBC,OAAO,EAAE;AALQ,CAArB;AASA,OAAO,MAAMC,YAAY,GAAGX,gBAAgB,CAAC,eAAD,EAAkB,uBAA8D;EAAA,IAAvD;IAAEY,QAAF;IAAYC,KAAZ;IAAmBC;EAAnB,CAAuD;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EACxH,IAAI;IACA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAKAf,KAAK,CAACgB,IAAN,CAAW,6BAAX,EAA0C;MACtCN,QADsC;MAEtCC,KAFsC;MAGtCC;IAHsC,CAA1C;EAKH,CAXD,CAWE,OAAOL,KAAP,EAAc,CAEf;AACJ,CAf2C,CAArC;AAiBP,OAAO,MAAMU,KAAK,GAAGnB,gBAAgB,CAAC,iBAAD,EAAoB,wBAAoD;EAAA,IAA7C;IAAEa,KAAF;IAASC;EAAT,CAA6C;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EACzG,IAAI;IACA,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAKA,MAAM;MAAEG;IAAF,IAAW,MAAMlB,KAAK,CAACgB,IAAN,CAAW,6BAAX,EAA0C;MAC7DL,KAD6D;MAE7DC;IAF6D,CAA1C,EAGpBE,MAHoB,CAAvB;IAKAZ,YAAY,CAACiB,OAAb,CAAqB,WAArB,EAAkCD,IAAI,CAACjB,SAAvC;IACA,OAAOiB,IAAP;EACH,CAbD,CAaE,OAAOX,KAAP,EAAc;IACZ,IAAIA,KAAK,CAACa,QAAN,IAAkBb,KAAK,CAACa,QAAN,CAAeF,IAAf,CAAoBG,OAA1C,EAAmD;MAC/C,OAAOR,eAAe,CAACN,KAAK,CAACa,QAAN,CAAeF,IAAf,CAAoBG,OAArB,CAAtB;IACH,CAFD,MAEO;MACH,OAAOR,eAAe,CAACN,KAAK,CAACc,OAAP,CAAtB;IACH;EACJ;AACJ,CArBoC,CAA9B,C,CAuBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,SAAS,CAACC,OAAzB"},"metadata":{},"sourceType":"module"}