{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'; // userAction.js\n\nexport const registerUser = createAsyncThunk( // action type string\n'user/register', // callback function\nasync (_ref, _ref2) => {\n  let {\n    firstName,\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    // configure header's Content-Type as JSON\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // make request to backend\n\n    await axios.post('/api/user/register', {\n      firstName,\n      email,\n      password\n    }, config);\n  } catch (error) {\n    // return custom error message from API if any\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n}); // export const login = createAsyncThunk('login/loginUser', async ({ email, password }, { rejectWithValue }) => {\n//     try {\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//         }\n//         const { data } = await axios.post('http://localhost:5003/login', {\n//             email,\n//             password\n//         }, config)\n//         localStorage.setItem('userToken', data.userToken)\n//         return data\n//     } catch (error) {\n//         if (error.response && error.response.data.message) {\n//             return rejectWithValue(error.response.data.message)\n//         } else {\n//             return rejectWithValue(error.message)\n//         }\n//     }\n// })\n// const loginSliceReducer = createSlice({\n//     name: \"login\",\n//     initialState,\n//     extraReducers: builder => {\n//         builder.addCase(login.pending, state => {\n//             state.loading = true\n//         })\n//         builder.addCase(login.fulfilled, (state, action) => {\n//             state.loading = false\n//             state.user = action.payload\n//         })\n//         builder.addCase(login.rejected, (state, action) => {\n//             state.loading = false\n//             state.user = []\n//             state.error = action.error.message\n//         })\n//     }\n// })","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","registerUser","firstName","email","password","rejectWithValue","config","headers","post","error","response","data","message"],"sources":["/Users/reginaldamedee/CodingProjects/calisthenics-prime/client/src/features/user/userAction.js"],"sourcesContent":["import { createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\n// userAction.js\nexport const registerUser = createAsyncThunk(\n    // action type string\n    'user/register',\n    // callback function\n    async ({ firstName, email, password }, { rejectWithValue }) => {\n    try {\n    // configure header's Content-Type as JSON\n    const config = {\n    headers: {\n    'Content-Type': 'application/json',\n    },\n    }\n    // make request to backend\n    await axios.post(\n    '/api/user/register',\n    { firstName, email, password },\n    config\n    )\n    } catch (error) {\n    // return custom error message from API if any\n    if (error.response && error.response.data.message) {\n    return rejectWithValue(error.response.data.message)\n    } else {\n    return rejectWithValue(error.message)\n    }\n    }\n    \n    }\n    )\n\n\n// export const login = createAsyncThunk('login/loginUser', async ({ email, password }, { rejectWithValue }) => {\n//     try {\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//         }\n//         const { data } = await axios.post('http://localhost:5003/login', {\n//             email,\n//             password\n//         }, config)\n\n//         localStorage.setItem('userToken', data.userToken)\n//         return data\n//     } catch (error) {\n//         if (error.response && error.response.data.message) {\n//             return rejectWithValue(error.response.data.message)\n//         } else {\n//             return rejectWithValue(error.message)\n//         }\n//     }\n// })\n\n// const loginSliceReducer = createSlice({\n//     name: \"login\",\n//     initialState,\n//     extraReducers: builder => {\n//         builder.addCase(login.pending, state => {\n//             state.loading = true\n//         })\n//         builder.addCase(login.fulfilled, (state, action) => {\n//             state.loading = false\n//             state.user = action.payload\n//         })\n//         builder.addCase(login.rejected, (state, action) => {\n//             state.loading = false\n//             state.user = []\n//             state.error = action.error.message\n//         })\n//     }\n// })\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,EACxC;AACA,eAFwC,EAGxC;AACA,uBAA+D;EAAA,IAAxD;IAAEG,SAAF;IAAaC,KAAb;IAAoBC;EAApB,CAAwD;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EAC/D,IAAI;IACJ;IACA,MAAMC,MAAM,GAAG;MACfC,OAAO,EAAE;QACT,gBAAgB;MADP;IADM,CAAf,CAFI,CAOJ;;IACA,MAAMP,KAAK,CAACQ,IAAN,CACN,oBADM,EAEN;MAAEN,SAAF;MAAaC,KAAb;MAAoBC;IAApB,CAFM,EAGNE,MAHM,CAAN;EAKC,CAbD,CAaE,OAAOG,KAAP,EAAc;IAChB;IACA,IAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAA1C,EAAmD;MACnD,OAAOP,eAAe,CAACI,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAArB,CAAtB;IACC,CAFD,MAEO;MACP,OAAOP,eAAe,CAACI,KAAK,CAACG,OAAP,CAAtB;IACC;EACA;AAEA,CA3BuC,CAArC,C,CA+BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}