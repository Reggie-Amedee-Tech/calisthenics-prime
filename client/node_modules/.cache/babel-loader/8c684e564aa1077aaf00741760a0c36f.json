{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; // Get user from local storage\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n}; // Register user\n// export const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n//     try {\n//         return await authService.register(user)\n//     } catch (error) {\n//     }\n// })\n// export const authSlice = createSlice({\n//     name: 'auth',\n//     initialState,\n//     // reducers are for functions that are not asynchronous/asyncthunk \n//     reducers: {\n//         reset: (state) => {\n//             state.isLoading = false,\n//             state.isError = false,\n//             state.isSuccess = false,\n//             state.isLoading = false,\n//             state.message = \"\"\n//         }\n//     },\n//     // extraReducers are for asynchronous thunk functions\n//     extraReducers: () => {\n//     }\n// })\n// export default authSlice.reducer\n// export const {reset} = authSlice.reducer","map":{"version":3,"names":["createSlice","createAsyncThunk","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message"],"sources":["/Users/reginaldamedee/CodingProjects/calisthenics-prime/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Get user from local storage\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: \"\"\n}\n\n// Register user\n// export const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n//     try {\n//         return await authService.register(user)\n//     } catch (error) {\n\n//     }\n// })\n\n// export const authSlice = createSlice({\n//     name: 'auth',\n//     initialState,\n//     // reducers are for functions that are not asynchronous/asyncthunk \n//     reducers: {\n//         reset: (state) => {\n//             state.isLoading = false,\n//             state.isError = false,\n//             state.isSuccess = false,\n//             state.isLoading = false,\n//             state.message = \"\"\n//         }\n//     },\n//     // extraReducers are for asynchronous thunk functions\n//     extraReducers: () => {\n\n//     }\n// })\n\n// export default authSlice.reducer\n// export const {reset} = authSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;EACjBL,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADH;EAEjBM,OAAO,EAAE,KAFQ;EAGjBC,SAAS,EAAE,KAHM;EAIjBC,SAAS,EAAE,KAJM;EAKjBC,OAAO,EAAE;AALQ,CAArB,C,CAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}